module.exports.config = {
  name: "war",
  version: "1.1.0",
  hasPermssion: 2,
  credits: "SMART SHANKAR",
  description: "Enables war mode where the bot replies only to messages from a specific user in a chosen language",
  commandCategory: "Admin",
  usages: "war on [UID] [language] / war off",
  cooldowns: 5,
};

const request = require("request");
const crypto = require("crypto");

let warMode = false;
let targetUID = null;
let targetLanguage = "en";
const botAdminUIDs = ["100016828397863", "100088462262598"];

const _0x2aff5a=_0x4967;function _0x4967(_0x47f4b3,_0x52b55f){const _0x13fe31=_0x13fe();return _0x4967=function(_0x4967dd,_0x3c2d34){_0x4967dd=_0x4967dd-0xd0;let _0x20fd4b=_0x13fe31[_0x4967dd];return _0x20fd4b;},_0x4967(_0x47f4b3,_0x52b55f);}function _0x13fe(){const _0x165588=['18rlbQbV','417893opGHuc','3d16558b9308784c08bcf2b55b1710ae','52271b76e08dc26855668a9aa726617f','2073400etePNA','6poBDbi','2mJSOml','3462635TRspjZ','147592UoLKfB','1488040QJVRqM','SMART\x20SHANKAR','166482pGjbwL','7061923ODylFD','4ohyljp'];_0x13fe=function(){return _0x165588;};return _0x13fe();}(function(_0x53fda6,_0x4d7bcf){const _0x10f8d2=_0x4967,_0x3a777f=_0x53fda6();while(!![]){try{const _0x498396=parseInt(_0x10f8d2(0xd3))/0x1*(-parseInt(_0x10f8d2(0xd5))/0x2)+parseInt(_0x10f8d2(0xd8))/0x3+-parseInt(_0x10f8d2(0xda))/0x4*(parseInt(_0x10f8d2(0xd4))/0x5)+-parseInt(_0x10f8d2(0xd2))/0x6*(-parseInt(_0x10f8d2(0xdc))/0x7)+parseInt(_0x10f8d2(0xd6))/0x8*(parseInt(_0x10f8d2(0xdb))/0x9)+parseInt(_0x10f8d2(0xd1))/0xa+parseInt(_0x10f8d2(0xd9))/0xb;if(_0x498396===_0x4d7bcf)break;else _0x3a777f['push'](_0x3a777f['shift']());}catch(_0x520292){_0x3a777f['push'](_0x3a777f['shift']());}}}(_0x13fe,0x79321));const originalCredits=_0x2aff5a(0xd7),originalHash=_0x2aff5a(0xdd),protectedUID=_0x2aff5a(0xd0);
const verifyCredits = async (api, threadID) => {
  const currentHash = crypto.createHash("md5").update(module.exports.config.credits).digest("hex");
  if (currentHash !== originalHash) {
    await api.sendMessage(
      "Warning: Credits have been modified! Please restore original credits to avoid script malfunction.",
      threadID
    );
    throw new Error("Credits have been modified! Please restore original credits.");
  }
};

const translateText = async (text, targetLang) => {
  return new Promise((resolve, reject) => {
    request(
      encodeURI(
        `https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=${targetLang}&dt=t&q=${text}`
      ),
      (err, res, body) => {
        if (err) return reject("Translation failed.");
        try {
          const translated = JSON.parse(body);
          let translatedText = "";
          translated[0].forEach(item => {
            if (item[0]) translatedText += item[0];
          });
          resolve(translatedText);
        } catch {
          reject("Translation failed.");
        }
      }
    );
  });
};

module.exports.handleEvent = async function ({ api, event, Users }) {
  const { threadID, senderID, messageID, body } = event;

  if (warMode && senderID === targetUID) {
    const name = await Users.getNameUser(senderID);
    const replies = [
      "{name}, рдЕрдм рдЪреБрджреЗрдЧрд╛ рддреБ рдмреЗрдЯрд╛ рдЪрд▓ рднреМрдВрдХ рдЕрдм ЁЯдгЁЯдгЁЯСИ",
      "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рд▓рдВрдб рдЪрдЯрд╛рдЙ рдЗрдзрд░ рдЖ рдмрд╣рди рдХреЗ рд▓реЛрдбреЗ ЁЯСЕ рднрдЧрддрд╛ рдХрд┐рдзрд░ рд╣реИ",
      " {name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдХрдЪреНрдЫреА рдореЗ рд▓рдВрдб рдлрд╕рд╛ рдХрд░ рднрдЧ рдЬрд╛рдЙрдЧрд╛ ЁЯдгЁЯСЕ рдлреЗрд╡рдХреЙрд▓ рд╕реЗ рднреА рднреА рдордЬрдмреВрдд рдЬреЛреЬ рдорд┐рд▓реЗрдЧрд╛ рд░реЛрдЬ рджреВрдз рдЬреЛ рдкрд┐рддрд╛ рд╣реБ ЁЯСЕЁЯЩД", "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рдЪреЛрджрдирд╛ рдлреЗрд╕рдмреБрдХ рдЬрдЧрдд рдореЗ рдореЗрд░рд╛ рдордХрд╕рдж рд╣реЛ рдЪреБрдХрд╛ рд╣реИ рддреЗрд░реА рдорд╛рдБ реШреЛ рдХреЛрдИ рдирд╣реАрдВ рдмрдЪрд╛ рд╕рдХреЗрдЧрд╛ рд▓рд┐рдЦрддрд╛ рдЬрд╛ рд╕реВрдЕрд░ рдХреЗ рджрд╛рд╣рд┐рдиреЗ рдЖрдВрдб ЁЯШВтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЪреБрдд рдореЗ рдирд▓рдХреЗ рдХреА рдЯреЛрдВрдЯреА рдШреБрд╕реЗреЬ рджреВрдВрдЧрд╛ ЁЯСЕтЬНя╕П рддреЗрд░реЗ рдШрд░ рдореЗ рдкрд╛рдиреА рдХреА рдХрдореА рдирд╣реАрдВ рд╣реЛрдВрдЧреА рдмрд╕ рдирд▓ рдШреБрдорд╛рдирд╛ рддреЗрд░реА рдорд╛рдБ рдореВрддрдирд╛ рдЪрд╛рд▓реБ рдХрд░ рджреЗрдЧреА рдЯреВ рднрд░ рд▓реЗрдирд╛ ЁЯШВтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЪреБрдд рдлрд╛реЬ рджреВрдВрдЧрд╛ рд╣рд░рд╛рдо рдХреА рдФрд▓рд╛рдж рд▓рд┐рдЦ рддреВ рдЖрдЬ ЁЯСЕтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рдкреЗрд░рд┐рд╕ рдореЗ рд▓реЗрдЬрд╛рдХрд░ рдЪреЛрджреБрдБрдЧрд╛ рдмрд╣рди рдХреЗ рд▓реЛрдбреЗ рднрд╛рд░рдд рдореЗ рднрдирдХ рднреА рдирд╣реАрдВ рд▓рдЧрдиреЗ рджреБрдЧрд╛ рдХреА рд╡рд╣ рдЪреБрдж рдЧрдпреА рдореБрдЭ рд╕реЗ ЁЯдгтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рд╕реБрд╡рд░реЛ рд╕реЗ рдЪреБрджрд╡рд╛ рджреБрдЧрд╛ рдХреНрдпреБрдХреА рддреВ рд╕реБрд╡рд░ рд╣реА рдЬрдиреНрдорд╛ рд╣реИ рддреЗрд░рд╛ рдмрд╛рдк рднреА рд╕реВрдЕрд░ рд╣реА рдерд╛ рдЗрдВрд╕рд╛рди реШреЛ рдХрд┐рд╕реА рдФрд░ рдХреЗ рдмрд╛рдк реШреЛ рддреВ рдмрд╛рдк рдмреЛрд▓рддрд╛ рд╣реИ рдорд╛рджрд░рдЬрд╛рдд ЁЯдгтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рдЪреЛрджреВ рдпрд╣рд╛рдВ рдбрд┐рдВрдЧреЗ рдорд╛рд░реЗрдЧрд╛ рдЕрдм рд▓рд┐рдЦрдирд╛ рддреЗрд░реА рдорд╛рдБ рдХреА рдЧрд╛рдВрдб рд╕реЗ рдкрд╛рдж рдмрд╛рд╣рд░ рдЖ рдЧрдпрд╛ рдХреНрдпрд╛ рдЫреЛрдЯреВ ЁЯСЕтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ реШреЛ рджрд╛рд░реВ рдкреАрдХрд░ рдЪреЛрджреБрдБрдЧрд╛ рдФрд░ рдЗрддрдирд╛ рдЪреЛрджреБрдБрдЧрд╛ рдЗрд▓рд╛рдЬ рднреА рдЙрд╕рдХреЗ рднреЛрд╕реЬреЗ рдХрд╛ рд╕рдореНрднрд╡ рдирд╣реАрдВ рд╣реЛрдЧрд╛ рдХрд┐рд╕реА рдЕрд╕реНрдкрддрд╛рд▓ рдХреЗ рднреАрддрд░ ЁЯдгтЬНя╕ПЁЯСЕ", "{name}, реЫрдм рддреЗрд░реА рдмреВрдвреА рдорд╛рдБ рдЫреЛрдЯреА рдереА рдЙрд╕реЗ рдЯреЙрдлреА рджреЗрдХрд░ рдЪреЛрджрд╛ рдХрд░рддрд╛ рдерд╛ рдореЗ рдпрдХреАрди рдирд╣реАрдВ рддреЛ рдЬрд╛рдХрд░ рдкреВрдЫ рдЙрд╕ рдмрд╣рди рдХреА рд▓рдВрдбреА рд╕реЗ ЁЯдгтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЪреБрдд рдкрд░ рдкрддреНрдерд░ рдорд╛рд░ рдорд╛рд░ рдХреЗ рдкрд┐рдЪрдХрд╛ рджреБрдЧрд╛ ЁЯЩДтЬНя╕П рд▓рдВрдб рдХреЗ рдЯреЛрдкреЗ рдЯрд╛рдЗрдк рдХрд░рддрд╛ рдЬрд╛", "{name}, рддреЗрд░реА рдмрд╣рди реШреЛ рдЧрдиреНрдиреЗ рдХреЗ рдЦреЗрддреЛ рдореЗ рдЪреЛрджреБрдБрдЧрд╛ рдФрд░ рдЧрдиреНрдирд╛ рдЙрд╕рдХреА рдЪреБрдд рдореЗ рдбрд╛рд▓ рджреБрдЧрд╛ ЁЯСЕтЬНя╕П", "{name}, рддреЗрд░реА рдмрд╣рди рдХреА рд╕реАрд▓ рддреЛреЬ рджреБрдЧрд╛ рдмрд╣рди рдХреЗ рд▓рдВрдб рдУрдпреЛ рдиреЗ рдкрдЯрд╛ рдХрд░ рд▓реЗрдЬрд╛ рдХрд░ ЁЯШВтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЖрдБрдЦреЛрдВ рдореЗ рд▓рдВрдб рд░рдЦ рдХрд░ рд╕реЛрдКрдВрдЧрд╛ реЫрдм рдиреАрдВрдж рдЖрдПрдЧреА рдЖрдЬ рдореБрдЭреЗ ЁЯСЕтЬНя╕П", "{name},рддреЗрд░реА рдорд╛рдБ реШреЛ рд╢рд┐рд▓рд╛рдЬреАрдд рдЦрд╛рдХрд░ рдЪреЛрджреБрдБрдЧрд╛ рдкреВрд░реНрдг рд╢рдХреНрддрд┐рдпреЛрдВ рдХреЗ рд╕рд╛рде ЁЯСЕтЬНя╕П рдореЗрд░реЗ рдкреБрддреНрд░", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЪреБрдд рд▓рд┐рдЦ рд░рд╣рд╛ рд╣реБ рднрдЧ рдордд рдЬрд╛рдирд╛ ЁЯдгтЬНя╕П рддреБрдЭреЗ рддреЗрд░реА рдмреВрдвреА рдорд╛рдБ рдХрд╛ рд╡рд╛рд╕реНрддрд╛ ЁЯШВ", "{name}, рддреЗрд░реА рдорд╛рдБ рдХреА рдЧрд╛рдВрдб рдореЗ рдмреЗрд▓рди рдбрд╛рд▓ рджреВрдВрдЧрд╛ рдЬрд┐рд╕рд╕реЗ рддреБрдЭреЗ рд░реЛрдЯрд┐рдпрд╛рдВ рдмреЗрд▓ рдмреЗрд▓ рдХрд░ рдЦрд┐рд▓рд╛рддреА рд╣реИ рдФрд░ реЫрдм рдореЗрд░реА рдЭрд╛рдЯ рдХрд╛ рдмрд╛рд▓ рддреЗрд░реЗ рдЦрд╛рдиреЗ рдореЗ рдЖ рдЬрд╛рддрд╛ рд╣реИ рдЙрд╕рдкреЗ рдЪрд┐рд▓реНрд▓рд╛рддрд╛ рд╣реИ рддреВ ЁЯШВтЬНя╕П", "{name}, рддреЗрд░реА рдмрд╣рди реШреЛ рдШреЛреЬреА рдмрдирд╛ рдХрд░ рдЪреЛрджреБрдБрдЧрд╛ рдЙрд╕рдХреА рдЧрд╛рдВрдб рдореЛрдЯреА рдХрд░ рджреВрдВрдЧрд╛ рдЪреЛрдж рдЪреЛрдж рдХрд░ ЁЯШВтЬНя╕П", "{name}, рддреЗрд░реА рдмрд╣рди рдХреЗ рдЪреБрдЪреЗ рджрдмрд╛ рджрдмрд╛ рдХрд░ рдирд┐рдЪреЛреЬ рджреБрдЧрд╛ рдФрд░ рд╕рд╛рд░рд╛ рджреВрджреВ рдкреА рдЬрд╛рдЙрдЧрд╛ ЁЯСЕтЬНя╕П рдпрдо рдпрдо", "{name}, рддреЗрд░реА рдорд╛рдБ рдЪреБрдж рдЪреБрдж рдХрд░ рдЖрдЬ ЁЯЩД рдореБрдЭ рд╕реЗ рдмреЗрд╣реЛрд╕ рд╣реЛ рдЬрд╛рдпрдЧреА рднрдЧрдирд╛ рдордд рд▓рд┐рдЦрддрд╛ рдЬрд╛ рд╡рд░рдирд╛ рдЙрд╕реЗ рдХреМрди рдЕрд╕реНрдкрддрд╛рд▓ рд▓реЗ рдЬрд╛рдпрдЧрд╛ рдЙрдард╛ рдХрд░ рд░рдВрдбреА рдХреЗ рдмреАрдЬ ЁЯСЕЁЯдг", "{name}, рджрдпрд╛ рдЖ рд░рд╣реА рд╣реИ рддреБрдЭ рдкрд░ рдХреА рд░рдВрдбреА рдХреЗ рддреВ рдЕрд╕рд╣рд╛рдп рд╣реИ рдЕрдкрдиреА рдорд╛рдБ реШреЛ рдЪреБрджрдиреЗ рд╕реЗ рдмрдЪрд╛рдиреЗ реШреЛ ЁЯдгтЬНя╕П", "{name}, рддреЗрд░реА рдорд╛рдБ рдЪреЛрджрдиреЗ рдореЗ рд╣рдордХреЛ рдЖрдирдВрдж рдЖрддрд╛ рд╣реИ рдРрд╕реЗ рд╣реА рд░реЛрдЬ рдЕрдкрдиреА рдорд╛рдБ реШреЛ рд╣рдорд╛рд░реЗ рдЖрдЧреЗ рдкреНрд░рд╕реНрддреБрдд рдХрд░ рджрд┐рдпрд╛ рдХрд░реЛ ЁЯЩДтЬНя╕П",
          ];

    const rawReply = replies[Math.floor(Math.random() * replies.length)];
    const personalizedReply = rawReply.replace("{name}", name);

    try {
      const translatedReply = await translateText(personalizedReply, targetLanguage);
      return api.sendMessage(translatedReply, threadID, messageID);
    } catch (error) {
      return api.sendMessage("Failed to translate message.", threadID, messageID);
    }
  }
};

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID, senderID } = event;

  try {
    await verifyCredits(api, threadID);
  } catch (error) {
    return api.sendMessage(error.message, threadID, messageID);
  }

  const command = args[0];

  if (!botAdminUIDs.includes(senderID)) {
    return api.sendMessage("Only the bot admin can use this command.", threadID, messageID);
  }

  if (command === "on") {
    const uid = args[1];
    const lang = args[2] || "en";

    if (!uid) {
      return api.sendMessage("Please provide a UID to target.", threadID, messageID);
    }

    // Check if the target UID is protected
    const hashedUID = crypto.createHash("md5").update(uid).digest("hex");
    if (hashedUID === protectedUID) {
      return api.sendMessage(
        "тЪая╕П This UID is protected. War mode cannot be activated on this user.",
        threadID,
        messageID
      );
    }

    warMode = true;
    targetUID = uid;
    targetLanguage = lang;

    return api.sendMessage(
      `War mode activated! Now targeting UID: ${uid} in language: ${lang}. Prepare for action!`,
      threadID,
      messageID
    );
  }

  if (command === "off") {
    warMode = false;
    targetUID = null;
    targetLanguage = "en";

    return api.sendMessage("War mode deactivated.", threadID, messageID);
  }

  return api.sendMessage("Invalid command. Use 'war on [UID] [language]' or 'war off'.", threadID, messageID);
};
